@using System.Web.Mvc.Html
@using SmartHouse;
@model IDictionary<int, Device>

<!DOCTYPE html>
<html>
<head>
</head>
<body>
    @using (Html.BeginForm("Add", "SmartHouse"))
    {
        @Html.DropDownList("deviceType", (IEnumerable<SelectListItem>) ViewBag.DevicesList)
        <input type="submit" id="addDevicesButton" value="Добавить"><br/>

        foreach (var item in Model)
        {
            <div class="device-div">
                @* Добавление gif анимации в зависимости от девайса*@
                @if (item.Value is ISetChannel && item.Value is IChannelSetup)
                {
                    IChannelSetup chSetup = (IChannelSetup) item.Value;
                    if (item.Value.Status == false)
                    {
                        <img src="~/Content/images/offTV.png" alt="Телевизор выключен"/>
                    }
                    else if (item.Value.Status && chSetup.СhanState == false)
                    {
                        <img src="~/Content/images/1.gif" alt="Телевизор включен, но каналы не настроены"/>
                    }
                    else if (item.Value.Status && chSetup.СhanState)
                    {
                        <img src="~/Content/images/2.gif" alt="Телевизор включен, каналы настроены"/>
                    }
                }
                @if (item.Value is IRateOfOpening)
                {
                    bool statusOpen = ((IRateOfOpening) item.Value).StatusOpen;
                    if (statusOpen && item.Value is ISetFreezeMode)
                    {
                        <img src="~/Content/images/OpenRef.gif" alt="Холодильник открыт"/>
                    }
                    else if (statusOpen == false && item.Value is ISetFreezeMode)
                    {
                        <img src="~/Content/images/closeRef.gif" alt="Холодильник закрыт"/>
                    }
                    else if (statusOpen && item.Value is ITimeOfDayMode)
                    {
                        <img src="~/Content/images/OpenW.gif" alt="Жалюзи открыты"/>
                    }
                    else if (statusOpen == false && item.Value is ITimeOfDayMode)
                    {
                        <img src="~/Content/images/CloseW.gif" alt="Жалюзи закрыты"/>
                    }
                }
                @if (item.Value is ITimeOfDayMode)
                {
                    if (item.Value.Status == false)
                    {
                        <img src="~/Content/images/down.gif" alt="Жалюзи опущены"/>
                    }
                    else if (item.Value.Status)
                    {
                        <img src="~/Content/images/up.gif" alt="Жалюзи подняты"/>
                    }
                }
                @if (item.Value is IEnterLevel)
                {
                    if (item.Value.Status == false)
                    {
                        <img src="~/Content/images/wateringOff300.png" alt="Вода не льется"/>
                    }
                    else if (item.Value.Status)
                    {
                        <img src="~/Content/images/244x300_2watering.gif" alt="Вода льется"/>
                    }
                }
                 
                @*Добавление элементов в зависимости от девайса*@           
                <p class="status">Устройство: @item.Value.Name <br/> @item.Value.ToString()</p>

                @if (item.Value is ITimeOfDayMode)
                {
                    @Html.ActionLink("Поднять", "Operation", new {id = item.Key, command = "on"}, new {@class = "button"})
                }
                else
                {
                    @Html.ActionLink("Включить", "Operation", new {id = item.Key, command = "on"}, new {@class = "button"})
                }

                @if (item.Value is ITimeOfDayMode)
                {
                    @Html.ActionLink("Опустить", "Operation", new {id = item.Key, command = "off"}, new {@class = "button"})<br/>
                }
                else
                {
                    @Html.ActionLink("Выключить", "Operation", new { id = item.Key, command = "off" }, new { @class = "button" })<br />
                }

                @if (item.Value is ISetChannel)
                {
                @Html.ActionLink("Канал ++", "Operation", new {id = item.Key, command = "nCh"}, new {@class = "button"})
                @Html.ActionLink("Канал --", "Operation", new {id = item.Key, command = "eCh"}, new {@class = "button"})
                @Html.ActionLink("Prev", "Operation", new {id = item.Key, command = "prevCh"}, new {@class = "button"})<br/>
                <span>Перейти на канал:</span>
                @Html.TextBox("chan", (string) ViewBag.Chan, new {id = "chan" + item.Key, size = "3"})
                <input type="image" src="~/Content/images/btnP2.png" id="@item.Key" formaction="SetChannel/@item.Key"/><br/>
                <label class="error">@TempData["ErrorChannel"]</label>

                }

                @if (item.Value is ISetVolume)
                {
                @Html.ActionLink("Звук ++", "Operation", new {id = item.Key, command = "maxV"}, new {@class = "button"})
                @Html.ActionLink("Звук --", "Operation", new {id = item.Key, command = "minV"}, new {@class = "button"})
                @Html.ActionLink("Mute", "Operation", new {id = item.Key, command = "mute"}, new {@class = "button"}) <br/>
                <span>Установить звук:</span>
                @Html.TextBox("vol", "", new {id = "vol" + item.Key, size = "3"})
                <input type="image" src="~/Content/images/btnU2.png" id="@item.Key" formaction="SetVolume/@item.Key"/><br/>
                <p><label class="error">@TempData["ErrorVolume"]</label></p>
                }

                @if (item.Value is IRateOfOpening)
                {
                    @Html.ActionLink("Открыть", "Operation", new {id = item.Key, command = "open"}, new {@class = "button"})
                    @Html.ActionLink("Закрыть", "Operation", new {id = item.Key, command = "close"}, new {@class = "button"})<br/>
                }

                @if (item.Value is ISetFreezeMode)
                {
                <span>Выберите режим:</span>
                @Html.DropDownList("frMode", new SelectList(new[]
                {
                    TemperatureLevel.Default.ToString(), TemperatureLevel.LowFreeze.ToString(), TemperatureLevel.ColderFreezing.ToString(), TemperatureLevel.DeepFreeze.ToString(),
                    TemperatureLevel.Defrost.ToString()}), (string)Session["FreezeMode"], new {id = "frMode" + item.Key})
                <input type="image" src="~/Content/images/btnU.png" id="@item.Key" formaction="SetFreezeMode/@item.Key" /><br />
                }

                @if (item.Value is ISetTemperature)
                {
                <span>Введите желаемую температуру в диапазоне 2...15:</span>
                @Html.TextBox("temp", "", new {id = "temp" + item.Key, size = "3"})<br/>
                <input type="image" src="~/Content/images/btnU.png" id="@item.Key" formaction="SetTemperature/@item.Key"/><br/>
                <label class="error">@TempData["ErrorTemperature"]</label>
                }

                @if (item.Value is ICustomMode)
                {                     
                <span>Введите желаемый уровень температуры в диапазоне 30...90:</span>
                @Html.TextBox("custom", "", new {id = "custom" + item.Key, size = "3"})
                <input type="image" src="~/Content/images/btnU.png" id="@item.Key" formaction="SetCustomMode/@item.Key"/><br/>
                <p><label class="error">@TempData["ErrorCustomMode"]</label></p>
                }

                @if (item.Value is ITimeOfDayMode)
                {                    
                <span>Выберите режим:</span>
                @Html.DropDownList("timeMode", new SelectList(new[] {ShuttersMode.MorningMode.ToString(), ShuttersMode.EveningMode.ToString()}), (string)Session["TimeMode"], new {id = "timeMode" + item.Key})
                <input type="image" src="~/Content/images/btnU.png" id="@item.Key" formaction="SetTimeOfDayMode/@item.Key" /><br />
                }

                @if (item.Value is IModeHeating)
                {
                <span>Выберите режим:</span>
                @Html.DropDownList("h", new SelectList(new[] {BoilerMode.MaxMode.ToString(), BoilerMode.MinMode.ToString()}), (string)Session["ModeHeating"], new {id = "h" + item.Key})
                <input type="image" src="~/Content/images/btnU.png" id="@item.Key" formaction="SetModeHeating/@item.Key" /><br />
                }

                @if (item.Value is IEnterLevel)
                {
                <span>Введите уровень влажности почвы:</span>
                @Html.TextBox("level", Session["Level"], new { id = "level" + item.Key, size = "3"})
                <input type="image" src="~/Content/images/btnV.png" id="@item.Key" formaction="EnterLevel/@item.Key" /><br />
                <label class="error">@TempData["ErrorSoilMoisture"]</label>
                }

                @if (item.Value is IChannelSetup)
                {
                    @Html.ActionLink("Настроить", "Operation", new { id = item.Key, command = "scan" }, new { @class = "button" })
                    @Html.ActionLink("Список", "Operation", new { id = item.Key, command = "listChan" }, new { @class = "button" })
                }
                <br/>@Html.ActionLink("Удалить", "Delete", new { id = item.Key }, new { @class = "Del"})
            </div>
        }
    }
</body>
</html>
